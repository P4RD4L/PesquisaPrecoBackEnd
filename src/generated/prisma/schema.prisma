// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  productName   String    @unique
  brand         String    @unique
  weight        Float
  status        Boolean
  prices        Price[]   @relation("ProductPrices") // Adicionado o nome do relacionamento
  relatedPrices Price[]   @relation("ProductRelatedPrices") // Adicionado o nome do segundo relacionamento
  relatedBrand  Price[]   @relation("BrandRelatedPrices") // Adicionado o nome do terceiro relacionamento
  created_at    DateTime? @default(now())
  upadated_at   DateTime? @default(now())

  @@map("products")
}

model Price {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  product         Product   @relation("ProductPrices", fields: [productId], references: [id]) // Nome do relacionamento adicionado
  productId       String    @db.ObjectId
  productRelation Product   @relation("ProductRelatedPrices", fields: [productRelName], references: [productName]) // Nome do segundo relacionamento adicionado
  productRelName  String
  brandRelation   Product   @relation("BrandRelatedPrices", fields: [brandRelName], references: [brand]) // Nome do terceiro relacionamento adicionado
  brandRelName    String
  price           Float
  market          String
  created_at      DateTime? @default(now())
  upadated_at     DateTime? @default(now())
  status          Boolean

  @@map("dbPrices")
}
